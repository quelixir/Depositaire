name: Lint and test Python code

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  lint-and-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8, 3.9 ]
        poetry-version: [ 1.0, 1.1.6 ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set up Poetry virtual environment
        run: poetry env use python${{ matrix.python-version }}

      - name: Install project dependencies
        run: poetry install

      - name: Lint code
        run: poetry run flake8 . || echo "::warning ::Linting failed! Read logs for more detail."

      - name: Check dependency safety
        run: |
          poetry run poetry check || echo "::warning ::Dependency safety checks failed! Read logs for more detail."
          poetry run pip check || echo "::warning ::Dependency safety checks failed! Read logs for more detail."
          poetry run safety check --full-report || echo "::warning ::Dependency safety checks failed! Read logs for more detail."

      - name: Create SQLite db from .sql file
        run: grep -Ev "START TRANSACTION;|COMMIT;" depositaire.sql | sqlite3 depositaire.sqlite

      - name: Run tests with Poetry
        run: poetry run pytest --cov=depositaire --cov-report xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
